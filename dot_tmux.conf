bind-key c new-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -c "#{pane_current_path}"
# 插件设置
set set-clipboard on
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @resurrect-strategy-vim 'session' # 备份tmux窗口插件
set -g @resurrect-capture-pane-contents 'on' # 开启恢复面板内容功能
set -g @resurrect-strategy-vim 'session' # 恢复tmux会话
set -g @resurrect-capture-pane-contents 'on' # 恢复面板内容
set -g @resurrect-save-shell-history 'on' # 恢复shell历史命令
set -g @resurrect-dir '~/.tmux/BackupSessions'
run-shell ~/.tmux/plugins/tmux-resurrect/resurrect.tmux
run '~/.tmux/plugins/tpm/tpm'
# 开启鼠标模式
set -g mouse on

# 修改指令前缀
# set -g prefix C-e #
# unbind C-b # C-b 即 Ctrl+b 键，unbind 意味着解除绑定
# bind C-e send-prefix # 绑定 Ctrl+e 为新的指令前缀

unbind '"'
bind - splitw -v -c '#{pane_current_path}' # 垂直方向新增面板，默认进入当前目录
unbind %
bind =  splitw -h -c '#{pane_current_path}' # 水平方向新增面板，默认进入当前目录

bind -r k select-pane -U # 绑定k为↑
bind -r j select-pane -D # 绑定j为↓
bind -r h select-pane -L # 绑定h为←
bind -r l select-pane -R # 绑定l为→

# 面板调整大小
# 绑定Ctrl+hjkl键为面板上下左右调整边缘的快捷指令

bind -r ^k resizep -U 10 # 绑定Ctrl+k为往↑调整面板边缘10个单元格
bind -r ^j resizep -D 10 # 绑定Ctrl+j为往↓调整面板边缘10个单元格
bind -r ^h resizep -L 10 # 绑定Ctrl+h为往←调整面板边缘10个单元格
bind -r ^l resizep -R 10 # 绑定Ctrl+l为往→调整面板边缘10个单元格

setw -g mode-keys vi # 开启vi风格后，支持vi的C-d、C-u、hjkl等快捷键

set -g base-index 1 # 设置窗口的起始下标为1
set -g pane-base-index 1 # 设置面板的起始下标为1
set -s focus-events on
set-window-option -g automatic-rename off
set-window-option -g monitor-activity on

# --------------------------------------------------- 状态栏 -----------------------------------------------------------

set -wg window-status-format " #I #W " # 状态栏窗口名称格式
set -wg window-status-current-format " #I:#W#F " # 状态栏当前窗口名称格式(#I：序号，#w：窗口名称，#F：间隔符)
set -wg window-status-separator "" # 状态栏窗口名称之间的间隔
set -g message-style "bg=#7C606B, fg=#EB7BC0" # 指定消息通知的前景、后景色


# 自定义状态栏
set -g status-interval 1 # 状态栏刷新时间
set -g status-justify left # 状态栏列表左对齐
setw -g monitor-activity on # 非当前窗口有内容更新时在状态栏通知


# --------------------------------------------------- linux -----------------------------------------------------------

set -g status-left "YZY #W" # 状态栏左侧内容
set -g status-style "bg=#472C1B, fg=#D7F75B" # 状态栏前景背景色

set -g status-right 'YZY@CS #{continuum_status}' # 状态栏右侧内容

set -wg window-status-current-style "bg=#7D451B" # 状态栏当前窗口名称的样式

set -g status-left "" # 状态栏左侧内容
